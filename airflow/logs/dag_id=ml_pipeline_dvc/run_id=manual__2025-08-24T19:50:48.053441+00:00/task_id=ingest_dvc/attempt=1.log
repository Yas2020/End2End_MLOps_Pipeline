{"timestamp":"2025-08-24T19:50:48.993803","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-24T19:50:48.994776","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ml_pipeline_dvc_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-24T19:50:49.045270","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:49.046380","level":"info","event":"Running command: ['/usr/bin/bash', '-c', '\\n            cd /opt/airflow/ml_pipeline \\n            dvc repro ingest --force\\n            dvc push\\n        ']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:49.062183","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:52.049114","level":"info","event":"Running stage 'ingest':","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:52.049391","level":"info","event":"> python data/ingest/etl_task.py && python data/ingest/download_data.py","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:53.808187","level":"info","event":"{\"asctime\": \"2025-08-24 19:50:53,807\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"AWS ENDPOINT is: http://minio:9000\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:53.817369","level":"info","event":"{\"asctime\": \"2025-08-24 19:50:53,816\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Simulated data generated.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:53.888490","level":"info","event":"{\"asctime\": \"2025-08-24 19:50:53,888\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Simulated data saved at s3://mlflow-artifacts/data/raw/fraud_data_v20250824_195053.csv.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:53.891205","level":"info","event":"{\"asctime\": \"2025-08-24 19:50:53,890\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"\\u2705 Saved version_meta.json locally.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:53.912697","level":"info","event":"{\"asctime\": \"2025-08-24 19:50:53,912\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Meta Version saved to: s3://mlflow-artifacts/data/raw/metadata_v20250824_195053.json\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.161295","level":"info","event":"{\"asctime\": \"2025-08-24 19:50:55,160\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"\\u2705 Data saved locally in data/raw\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.430127","level":"info","event":"Updating lock file 'dvc.lock'","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.445462","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.445651","level":"info","event":"To track the changes with git, run:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.445762","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.445878","level":"info","event":"\tgit add dvc.lock","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.445981","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.446130","level":"info","event":"To enable auto staging, run:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.446219","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.446306","level":"info","event":"\tdvc config core.autostage true","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:55.449279","level":"info","event":"Use `dvc push` to send your updates to remote storage.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:59.501085","level":"info","event":"12 files pushed","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:59.959777","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:50:59.961290","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198dda2-261f-767a-9490-b9f03634ffc0'), task_id='ingest_dvc', dag_id='ml_pipeline_dvc', run_id='manual__2025-08-24T19:50:48.053441+00:00', try_number=1, map_index=-1, hostname='164a13d1adf0', context_carrier={}, task=<Task(BashOperator): ingest_dvc>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 24, 19, 50, 48, 941993, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/ml_pipeline_dvc/runs/manual__2025-08-24T19%3A50%3A48.053441%2B00%3A00/tasks/ingest_dvc?try_number=1')","logger":"task"}
