{"timestamp":"2025-08-21T03:40:34.982079","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-21T03:40:34.984021","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ml_pipeline_dvc_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-21T03:40:35.128745","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:35.130856","level":"info","event":"Running command: ['/usr/bin/bash', '-c', '\\n            cd /opt/airflow/ml_pipeline \\n            dvc repro ingest --force    \\n            dvc push\\n        ']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:35.161921","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:42.494957","level":"info","event":"Running stage 'ingest':","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:42.501032","level":"info","event":"> python data/ingest/etl_task.py && python data/ingest/download_data.py","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:49.383767","level":"info","event":"{\"asctime\": \"2025-08-21 03:40:49,383\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"AWS ENDPOINT is: http://minio:9000\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:49.410183","level":"info","event":"{\"asctime\": \"2025-08-21 03:40:49,409\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Simulated data generated.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:49.592667","level":"info","event":"{\"asctime\": \"2025-08-21 03:40:49,591\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Simulated data saved at s3://mlflow-artifacts/data/raw/fraud_data_v20250821_034049.csv.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:49.610146","level":"info","event":"{\"asctime\": \"2025-08-21 03:40:49,608\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"\\u2705 Saved version_meta.json locally.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:49.716252","level":"info","event":"{\"asctime\": \"2025-08-21 03:40:49,711\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Meta Version saved to: s3://mlflow-artifacts/data/raw/metadata_v20250821_034049.json\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:57.562053","level":"info","event":"{\"asctime\": \"2025-08-21 03:40:57,560\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"\\u2705 Data saved locally in data/raw\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.645499","level":"info","event":"Updating lock file 'dvc.lock'","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.686860","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.687525","level":"info","event":"To track the changes with git, run:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.688310","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.688618","level":"info","event":"\tgit add dvc.lock","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.689029","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.689355","level":"info","event":"To enable auto staging, run:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.689588","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.690005","level":"info","event":"\tdvc config core.autostage true","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:40:58.704887","level":"info","event":"Use `dvc push` to send your updates to remote storage.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:41:09.841570","level":"info","event":"12 files pushed","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:41:11.313757","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T03:41:11.324330","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198cab6-ca50-70cb-95b3-94255a51c910'), task_id='ingest_dvc', dag_id='ml_pipeline_dvc', run_id='manual__2025-08-21T03:40:33.205434+00:00', try_number=1, map_index=-1, hostname='c64456fb60b5', context_carrier={}, task=<Task(BashOperator): ingest_dvc>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 21, 3, 40, 34, 857967, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/ml_pipeline_dvc/runs/manual__2025-08-21T03%3A40%3A33.205434%2B00%3A00/tasks/ingest_dvc?try_number=1')","logger":"task"}
