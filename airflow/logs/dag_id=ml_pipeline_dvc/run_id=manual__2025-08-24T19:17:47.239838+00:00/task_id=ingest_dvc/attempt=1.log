{"timestamp":"2025-08-24T19:17:52.847929","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-24T19:17:52.850091","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ml_pipeline_dvc_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-24T19:17:52.993677","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:17:52.997248","level":"info","event":"Running command: ['/usr/bin/bash', '-c', '\\n            cd /opt/airflow/ml_pipeline \\n            dvc repro ingest --force\\n            dvc push\\n        ']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:17:53.013234","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:17:59.233925","level":"info","event":"Running stage 'ingest':","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:17:59.234272","level":"info","event":"> python data/ingest/etl_task.py && python data/ingest/download_data.py","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:04.733438","level":"info","event":"{\"asctime\": \"2025-08-24 19:18:04,732\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"AWS ENDPOINT is: http://minio:9000\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:04.758596","level":"info","event":"{\"asctime\": \"2025-08-24 19:18:04,758\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Simulated data generated.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:05.062070","level":"info","event":"{\"asctime\": \"2025-08-24 19:18:05,061\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Simulated data saved at s3://mlflow-artifacts/data/raw/fraud_data_v20250824_191804.csv.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:05.069056","level":"info","event":"{\"asctime\": \"2025-08-24 19:18:05,068\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"\\u2705 Saved version_meta.json locally.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:05.098629","level":"info","event":"{\"asctime\": \"2025-08-24 19:18:05,097\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Meta Version saved to: s3://mlflow-artifacts/data/raw/metadata_v20250824_191804.json\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:07.964905","level":"info","event":"{\"asctime\": \"2025-08-24 19:18:07,964\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"\\u2705 Data saved locally in data/raw\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.550560","level":"info","event":"Updating lock file 'dvc.lock'","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.584690","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.584986","level":"info","event":"To track the changes with git, run:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.585254","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.585576","level":"info","event":"\tgit add dvc.lock","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.585843","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.586051","level":"info","event":"To enable auto staging, run:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.586345","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.586675","level":"info","event":"\tdvc config core.autostage true","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:08.600908","level":"info","event":"Use `dvc push` to send your updates to remote storage.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:15.051023","level":"info","event":"12 files pushed","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:16.200662","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-24T19:18:16.204870","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198dd83-ec9d-7805-8d42-358a5846f073'), task_id='ingest_dvc', dag_id='ml_pipeline_dvc', run_id='manual__2025-08-24T19:17:47.239838+00:00', try_number=1, map_index=-1, hostname='164a13d1adf0', context_carrier={}, task=<Task(BashOperator): ingest_dvc>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 24, 19, 17, 50, 319935, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/ml_pipeline_dvc/runs/manual__2025-08-24T19%3A17%3A47.239838%2B00%3A00/tasks/ingest_dvc?try_number=1')","logger":"task"}
