{"timestamp":"2025-08-21T17:10:12.419912","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-21T17:10:12.422585","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/ml_pipeline_dvc_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-21T17:10:12.645138","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:12.647392","level":"info","event":"Running command: ['/usr/bin/bash', '-c', '\\n            git config --global --add safe.directory /opt/airflow/ml_pipeline\\n            cd /opt/airflow/ml_pipeline\\n            dvc pull --force\\n            dvc repro train_model\\n            dvc push\\n        ']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:12.707775","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:28.458958","level":"info","event":"M       artifacts/models/outlier/","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:28.473822","level":"info","event":"1 file modified","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:37.815539","level":"info","event":"Stage 'ingest' didn't change, skipping","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:38.010884","level":"info","event":"Stage 'preprocess' didn't change, skipping","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:38.235823","level":"info","event":"Running stage 'train_model':","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:38.236001","level":"info","event":"> python models/train_fraud_detector_task.py","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:44.741757","level":"info","event":"{\"asctime\": \"2025-08-21 17:10:44,741\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"MLflow run id: 216667bd8739430087cae3275bd87836\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:44.871674","level":"info","event":"{\"asctime\": \"2025-08-21 17:10:44,871\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Loading preprocessor from artifacts/preprocess/fraud_pipeline_v20250821_170631.pkl to process raw data\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:44.902126","level":"info","event":"{\"asctime\": \"2025-08-21 17:10:44,901\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Preprocessing/transform applied to raw data.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:45.061144","level":"info","event":"{\"asctime\": \"2025-08-21 17:10:45,058\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Evaluation metrics: {'accuracy': 0.998, 'f1_score': 0.9655172413793104, 'precision': 1.0, 'recall': 0.9333333333333333, 'auc': 0.9999312714776633}\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:45.701078","level":"info","event":"/home/airflow/.local/lib/python3.11/site-packages/mlflow/data/dataset_source_registry.py:149: UserWarning: Failed to determine whether UCVolumeDatasetSource can resolve source information for 's3://mlflow-artifacts/data/raw/fraud_data_v20250821_170631.csv'. Exception:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:45.701422","level":"info","event":"  return _dataset_source_registry.resolve(","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:45.726364","level":"info","event":"/home/airflow/.local/lib/python3.11/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:10:45.726605","level":"info","event":"  warnings.warn(","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:04.800331","level":"info","event":"Registered model 'FraudDetectionModel' already exists. Creating a new version of this model...","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.027465","level":"info","event":"2025/08/21 17:11:05 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: FraudDetectionModel, version 2","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.029512","level":"info","event":"Created version '2' of model 'FraudDetectionModel'.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.106518","level":"info","event":"{\"asctime\": \"2025-08-21 17:11:05,105\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Model pipeline logged to MLflow (artifact_path='model')\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.334745","level":"info","event":"/opt/airflow/ml_pipeline/models/train_fraud_detector_task.py:226: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.335254","level":"info","event":"  client.transition_model_version_stage(","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.449122","level":"info","event":"{\"asctime\": \"2025-08-21 17:11:05,448\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"Model registered and transitioned to 'Production' (version 2)\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.449414","level":"info","event":"{\"asctime\": \"2025-08-21 17:11:05,448\", \"levelname\": \"INFO\", \"name\": \"model_training\", \"trace_id\": null, \"span_id\": null, \"message\": \"\\u2705 Training & registration complete.\"}","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.577903","level":"info","event":"üèÉ View run train_v20250821_170631 at: http://mlflow:5000/#/experiments/2/runs/216667bd8739430087cae3275bd87836","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:05.578217","level":"info","event":"üß™ View experiment at: http://mlflow:5000/#/experiments/2","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.909083","level":"info","event":"Updating lock file 'dvc.lock'","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.937654","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.937960","level":"info","event":"To track the changes with git, run:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.938239","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.938417","level":"info","event":"\tgit add dvc.lock","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.938674","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.938872","level":"info","event":"To enable auto staging, run:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.939095","level":"info","event":"","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.939354","level":"info","event":"\tdvc config core.autostage true","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:06.945419","level":"info","event":"Use `dvc push` to send your updates to remote storage.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:13.646969","level":"info","event":"2 files pushed","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:14.261098","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook"}
{"timestamp":"2025-08-21T17:11:14.263777","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198cd98-0184-765d-95e2-a8ee358f0289'), task_id='train_fraud_detector_dvc', dag_id='ml_pipeline_dvc', run_id='manual__2025-08-21T17:05:47.735344+00:00', try_number=1, map_index=-1, hostname='c64456fb60b5', context_carrier={}, task=<Task(BashOperator): train_fraud_detector_dvc>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 21, 17, 10, 12, 145192, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/ml_pipeline_dvc/runs/manual__2025-08-21T17%3A05%3A47.735344%2B00%3A00/tasks/train_fraud_detector_dvc?try_number=1')","logger":"task"}
